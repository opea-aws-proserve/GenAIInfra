# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ollama-service.fullname" . }}
  labels:
    {{- include "ollama-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "ollama-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "ollama-service.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "ollama-service.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: model-downloader
          envFrom:
            - configMapRef:
                name: {{ include "ollama-service.fullname" . }}-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
            capabilities:
              drop:
                - ALL
              add:
                - DAC_OVERRIDE
                # To be able to make data model directory group writable for
                # previously downloaded model by old versions of helm chart
                - FOWNER
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['bash', '-c']
          args:
            - ollama serve & sleep 10 && ollama pull ${LLM_MODEL_ID}
          volumeMounts:
            # Running as non-root sets $HOME to /
            - mountPath: /.ollama
              name: model-volume

      containers:
        - name: {{ .Chart.Name }}
          command: ["bash", "-c"]
          args: ["ollama serve & sleep 10 && ollama run {{ .Values.LLM_MODEL_ID }} & wait"]
          envFrom:
            - configMapRef:
                name: {{ include "ollama-service.fullname" . }}-config
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            # Running as non-root sets $HOME to /
            - mountPath: /.ollama
              name: model-volume
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
      volumes:
        - name: model-volume
          emptyDir: {}
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
